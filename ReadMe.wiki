= RStation =

== Compiling ==
You shouldn't have any trouble building with MSVC 2008 - provided the project
files are up to date. The Xcode project is almost always up to date and should
work just fine at any given time (unless otherwise noted).

[*] Note: due to some major changes there aren't any VC project files currently.
 Hopefully in the next week or so we'll get/make some. [2010/10/27]

== Development ==
Don't worry about adding stubs and hacks - just try to get the job done and get
to it later. Currently the code is rather messy and I am working to improve it
and flesh out some of the stubs. As for coding style, just follow the source
in the file you're in, generally I write code like so:

<pre>
<code>
/*
 * Multi-line comment.
 * Hello there.
 */
void foo(_bar) : baz()
{
	baz = _bar;

	// * on the right
	int *pVar = new int[1];
	delete pVar;

	// omit braces for single-line ifs
	if (foo == bar)
		baz();

	for (int i = 0; i < 20; i++)
	{
		hello();
		there(i);
	}
}

class Test : public Stuff
{
public:
	Test();
	virtual ~Test();
};
</code>
</pre>

Note, variable names should use hungarian notation if it isn't obvious by the
name what it would be anyways. Example: <code>vpActors</code> for a vector of pointers to
Actors. However one would assume that <code>deltaTime</code> is always a float, so no "f"
prefix is needed. For multi-word variables use underscores for space, for
vars passed in as arguments prefix names with underscores, and CamelCase funcs.

The code is rather inconsistent right now, I apologize.

== Contact ==
Feel free to drop by #rhythm-station on irc.freenode.net! If you would like to
contact me directly you can do it there, though github, or through email at
shakesoda+rstation at gmail dot com.

== Compiling on Linux/gcc ==
  1. Make sure that you have following installed:
    - autotools
    - cmake (glfw3 git source needs this)
    - gl, glew
    - libpng (zlib as dependency of libpng)
    - openal, vorbisfile, fftw3
    - sqlite3
    - xrandr
    - >=lua-5.1 (optional, if you don't have it just 
      pass --with-bundled-lua to the configure script)
  2. Clone current git head with command:
       git clone git://github.com/shakesoda/Rhythm-Station.git rstation
  3. After cloning, move to the rstation directory and update glfw3
     source by running:
       git submodule init
       git submodule update
  4. Prepare glfw3 source by moving to extern/glfw3 directory and running:
       cmake ./
  5. Move back to rstation directory and run following to prepare 
     configure scripts:
       autoreconf --install
  6. Run "./configure"
  7. If everything went well, you can now run "make"
  8. After compiling, "./rstation"

Ubuntu users need to have atleast these packages installed 
in order to compile rstation:
build-essential, autoconf, libglew1.5-dev, cmake, libxrandr-dev, libpng-dev, 
libopenal-dev, libfftw3-dev, libvorbis-dev, libfreetype6-dev, libsqlite3-dev,  
liblua5.1-0-dev (optional)
